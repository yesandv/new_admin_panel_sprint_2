services:
  admin:
    build: app
    expose:
      - "8000"
    env_file:
      - ./.env
    volumes:
      - ./static:/var/www/static/
      - ./media:/var/www/media/
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             uwsgi --strict --ini uwsgi.ini"
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx_server
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./static:/var/www/static/
      - ./media:/var/www/media/
    ports:
      - "80:80"
    depends_on:
      - admin

  postgres:
    image: postgres:16
    container_name: postgres_db
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5432"
    volumes:
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  static:
  media:
  pgdata:
